name: Build and publish Docker images

on:
  push:
    branches:
      - 'master'

env:
  REGISTRY_IMAGE: ghcr.io/weberphilipp/speedflux

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        platform:
          - linux/amd64
          - linux/arm64
    outputs:
      short_sha: ${{ steps.sha.outputs.short_sha }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Extract Short SHA
        id: sha
        run: echo "short_sha=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Prepare Tags
        id: prep
        run: echo "platform_tag=$(echo ${{ matrix.platform }} | sed 's/\//-/g')" >> $GITHUB_OUTPUT
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: ${{ matrix.platform }}
          push: true
          tags: |
            ${{ env.REGISTRY_IMAGE }}:${{ steps.sha.outputs.short_sha }}-${{ steps.prep.outputs.platform_tag }}

  merge:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Create and push manifest
        run: |
          SHORT_SHA=${{ needs.build.outputs.short_sha }}
          docker buildx imagetools create \
            --tag ${{ env.REGISTRY_IMAGE }}:$SHORT_SHA \
            --tag ${{ env.REGISTRY_IMAGE }}:latest \
            ${{ env.REGISTRY_IMAGE }}:$SHORT_SHA-linux-amd64 \
            ${{ env.REGISTRY_IMAGE }}:$SHORT_SHA-linux-arm64
      - name: Inspect manifest
        run: |
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:$SHORT_SHA
          docker buildx imagetools inspect ${{ env.REGISTRY_IMAGE }}:latest
